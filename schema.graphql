input CreatePlayerInput {
  copper: Int
  elektrum: Int
  gold: Int
  name: String!
  platinum: Int
  playerImageUrl: String
  silver: Int
}

type Mutation {
  createPlayer(payload: CreatePlayerInput!): Player!
  deletePlayer(id: Int!): String!
  updatePlayer(id: Int!, payload: UpdatePlayerInput!): Player!
}

type Player {
  """Quantidade de cobre do jogador"""
  copper: Int

  """Quantidade de elektro do jogador"""
  elektrum: Int

  """Quantidade de ouro do jogador"""
  gold: Int
  id: Int!

  """Nome do jogador"""
  name: String

  """Quantidade de platina do jogador"""
  platinum: Int

  """Link da imagem de perfil do jogador"""
  playerImageUrl: String

  """Quantidade de prata do jogador"""
  silver: Int
}

type Query {
  """retorna todos os jogadores salvos"""
  getAllPlayers: [Player!]

  """retorna o jogador que possui o id passado"""
  getPlayerById(id: Int!): Player
}

input UpdatePlayerInput {
  copper: Int
  elektrum: Int
  gold: Int
  name: String
  platinum: Int
  playerImageUrl: String
  silver: Int
}